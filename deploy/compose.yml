name: banking_app

services:
  user_postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user_dbuser
      POSTGRES_PASSWORD: user_dbpass
      POSTGRES_DB: user_dbname
    ports:
      - "5432:5432"
    volumes:
      - ../internal/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_dbuser -d user_dbname" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
  user_service:
    build:
      context: ../UserService
      dockerfile: ./deploy/Dockerfile
    container_name: user_service
    depends_on:
      user_postgres:
        condition: service_healthy
    environment:
      JWT_SECRET_KEY: "very-secret-key"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - internal
  banking_postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: banking_dbuser
      POSTGRES_PASSWORD: banking_dbpass
      POSTGRES_DB: banking_dbname
    ports:
      - "5433:5433"
    volumes:
      - ../internal/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U banking_dbuser -d banking_dbname" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  banking_service:
    build:
      context: ../BankingService
      dockerfile: ./deploy/Dockerfile
    container_name: banking_service
    depends_on:
      banking_postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - internal

networks:
  internal: